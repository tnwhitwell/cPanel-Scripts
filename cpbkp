#!/bin/bash
config_file_path=./cpbkp.conf

function usage {
  local problem=$1
  local me=$(basename "$0")
  echo "$problem" >&2
  echo
  echo "Usage: $me backuptype [dry]"
  echo
  echo "  $me daily"
  echo
  echo "Run daily backup"
  echo
  echo "backuptype: daily, weekly, monthly"
  echo "add dry to dry run without making changes"
  exit 1
}
echo "Reading config from $config_file_path"
if [ -e "$config_file_path" ]; then
  source $config_file_path
else echo "Config file missing"
fi

daily_users=($daily_users)
weekly_users=($weekly_users)
all_users=( "${daily_users[@]} ${weekly_users[@]}")
other_users=()
for user in ${all_users[@]}; do
  if [ ! -e "/var/cpanel/users/$user" ]; then
    usage "$user is not a valid user. Please check for mistypes :)"
  fi
done
echo
monthly_users=($(cd /var/cpanel/users/ && ls -d *))
for tUser in ${all_users[@]}; do
  monthly_users=(${monthly_users[@]//*$tUser*})
done

if [ $# -lt 1 ]; then
  usage "Not enough arguments."
fi

backup_type=$1
shift
if [ -z ${1+x} ]; then echo "not dry"; else echo "dry"; fi


if ! [[ "$backup_type" =~ daily|weekly|monthly ]]; then
  usage "Backup type must be daily / weekly / monthly"
fi

# if [ ! -d "/backup/$backup_type" ]; then
#   mkdir "/backup/$backup_type"
# fi
#
# DATE=$(date --u +%Y-%m-%d) # set the date :)
#
# if [ ! -d "/backup/$ret_thing/$DATE" ]; then
#   mkdir "/backup/$ret_thing/$DATE"
# fi
#
# for user in $@; do
#   find "/backup/$ret_thing" -maxdepth 1 -mindepth 1 -type d | head -n -$retention_time | xargs rm -rfv 2>/dev/null
#   /scripts/pkgacct --backup "$user" "/backup/$ret_thing/$DATE"
# done
