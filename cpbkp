#!/bin/bash

DATE=$(date +%Y-%m-%d)

function usage(){
    local problem=$(shift)
    local me=$(basename "$0")
    echo "$problem" >&2
    echo "Usage: $me retentionUnit retention accountName(s)"
    echo "eg:"
    echo "$me days 4 jeff steve"
    echo "Will create backups of jeff and steve, and remove backups older than 4 days"
    exit 1
}

if [ $# -lt 3 ]; then
  usage "Not enough arguments."
fi

retention_unit=$(shift)
retention_time=$(shift)

if ! [[ "$retention_unit" =~ days|weeks ]]; then
  usage "Retention unit must be days / weeks"
fi

if [[ "$retention_time" =~ [^0-9]+ ]]; then
  usage "Retention value must be a number"
fi

for user in $@; do
  if [ ! -e "/var/cpanel/users/$user" ]; then
    usage "$user is not a valid user. Please check for mistypes :)"
  fi
done

if [ "$retention_unit" == "days" ]; then
  ret_thing="daily"
else
  ret_thing="weekly"
fi

if [ ! -d "/backup/$ret_thing" ]; then
  mkdir "/backup/$ret_thing"
fi

if [ ! -d "/backup/$ret_thing/$DATE" ]; then
  mkdir "/backup/$ret_thing/$DATE"
fi

for user in $@; do
  find "/backup/$ret_thing" -maxdepth 1 -mindepth 1 -type d -print0 | xargs -r0 stat -c %y\ %n | sort | head -n -$retention_time | uniq -u | awk '{ print $4 }' | xargs rm -rv 2>/dev/null
  /scripts/pkgacct --backup $user "/backup/$ret_thing/$DATE"
done
